name: ðŸŽ‡ Deployer

on:
  push:
    branches:
      - 'release'
  pull_request:
    branches:
      - 'release'

jobs:
  build:
    name: build and set image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        kotlin-version: [ 1.9.22 ]
        java-version: [ 21 ]
    steps:
      - name: checkout code
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Set up JDK 21 and Kotlin 1.9.22
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java-version }}
          kotlin-version: ${{ matrix.kotlin-version }}

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: build server
        run: ./gradlew build -x test

      - name: docker arm64 build set up - qemu
        uses: docker/setup-qemu-action@v2

      - name: docker arm64 build set up - buildx
        uses: docker/setup-buildx-action@v2

      - name: login github container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: extract version
        run: echo "##[set-output name=version;]$(echo '${{ github.event.head_commit.message }}' | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')"
        id: extract_version_name

      - name: push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/arm64/v8
          push: true
          tags: |
            ghcr.io/devxb/gitanimals:0.0.2
          build-args: |
            "DB_URL=${{ secrets.DB_URL }}"
            "DB_USERNAME=${{ secrets.DB_USERNAME }}"
            "DB_PASSWORD=${{ secrets.DB_PASSWORD }}"
            "GITHUB_TOKEN=${{ secrets.GH_TOKEN }}"
            "REDIS_HOST=${{ secrets.REDIS_HOST }}"
            "REDIS_PORT=${{ secrets.REDIS_PORT }}"

      - name: create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.extract_version_name.outputs.version }}
          release_name: ${{ steps.extract_version_name.outputs.version }}

  deploy:
    needs: build
    name: deploy
    runs-on: self-hosted
    steps:
      - name: extract version
        run: echo "##[set-output name=version;]$(echo '${{ github.event.head_commit.message }}' | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')"
        id: extract_version_name

      - name: run server
        run: |
          sudo docker pull ghcr.io/devxb/gitanimals:${{ steps.extract_version_name.outputs.version }}
          sudo docker ps -q --filter "expose=8080" | xargs sudo docker stop | xargs sudo docker rm
          sudo docker run -d -p ghcr.io/devxb/gitanimals:${{ steps.extract_version_name.outputs.version }}
